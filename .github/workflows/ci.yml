name: CI

on:
  - push
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lint-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: corepack enable
      - run: yarn install --ignore-engines --frozen-lockfile
      - run: yarn run lint

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 16.x
          - 18.x
          - 20.x
    env:
      FUSEKI_USERNAME: admin
      FUSEKI_PASSWORD: pw
      JENA_DATASET: mydataset
      CLI_TIMEOUT: 5
    services:
      jenafuseki:
        image: stain/jena-fuseki:4.8.0
        env:
          FUSEKI_DATASET_1: ${{ env.JENA_DATASET }}
          ADMIN_PASSWORD: ${{ env.FUSEKI_PASSWORD }}
        ports:
          - 4000:3030
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-test-modules-${{ hashFiles('**/yarn.lock') }}
      - run: corepack enable
      - run: yarn install --ignore-engines --frozen-lockfile
      - run: yarn run build
      - run: yarn run test
      - uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.node-version }}
          parallel: true
      - name: Test writing of data using the command line tool
        run: |
          node bin/fetch-sparql-endpoint.js \
            --endpoint http://localhost:4000/${{ env.JENA_DATASET }}/update \
            --query 'insert data { <ex:s> <ex:p> <ex:o> }' \
            --username ${{ env.FUSEKI_USERNAME }} \
            --password ${{ env.FUSEKI_PASSWORD }} \
            --timeout ${{ env.CLI_TIMEOUT }} \
          | grep 'OK' &> /dev/null && echo "OK" || (echo "Update failed" && exit 1)
      - name: Test reading of the written data using the command line tool
        run: |
          node bin/fetch-sparql-endpoint.js \
            --endpoint http://localhost:4000/${{ env.JENA_DATASET }}/sparql \
            --query 'select * where { ?s ?p ?o }' \
            --username ${{ env.FUSEKI_USERNAME }} \
            --password ${{ env.FUSEKI_PASSWORD }} \
            --timeout ${{ env.CLI_TIMEOUT }} \
          | grep '{"s":"ex:s","p":"ex:p","o":"ex:o"}' &> /dev/null && echo "OK" || (echo "Query failed" && exit 1)

  coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Consolidate test coverage from different jobs
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  webpack:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-webpack-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: corepack enable
      - run: yarn install --ignore-engines --frozen-lockfile
      - run: npx webpack
